//---------------------------//
//Bismillahir Rahmanir Raheem//
//---------------------------//
 
 
#include<bits/stdc++.h>
using namespace std;
#define  ull unsigned long long
#define  ll long long
#define M 1000000007

const int N = 1e5+10;
int parent[N];
int sz[N]; 

void make(int v){
    parent[v] = v;
    sz[v]=1;
}

int find(int v){
    if(v==parent[v]) return v;
    return parent[v]=find(parent[v]);//path compression
}

void Union(int a, int b){
    a=find(a);
    b=find(b);
    if(a!=b){
        //union by size
        if(sz[a]<sz[b]){
            swap(a,b);
        }
        parent[b]=a;
        sz[a]+=sz[b];
    }
}


int main()
{
    //fun();
    ios_base::sync_with_stdio(false);cin.tie(0);cout.tie(0);
    int n,k,cnt=0,ans=1;
    cin>>n>>k;
    for (int i = 1; i <=n; ++i)
    {
        make(i);
    }
    while(k--){
        int u,v;
        cin>>u>>v;
        Union(u,v);
    }
    int connected_ct=0;
    for (int i = 1; i <=n; ++i)
    {
       if(find(i)==i){
            connected_ct++;
        }
    }
    cout<<connected_ct<<endl;
   
}
